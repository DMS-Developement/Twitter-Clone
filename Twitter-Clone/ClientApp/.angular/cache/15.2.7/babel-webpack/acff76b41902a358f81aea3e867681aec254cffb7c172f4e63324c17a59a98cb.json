{
  "ast": null,
  "code": "import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, lo) {\n    this.formBuilder = formBuilder;\n    this.showRegisterForm = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      'email': ['', [Validators.required, Validators.email]],\n      'username': ['', Validators.required],\n      'password': ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      const email = this.registerForm.get('email')?.value;\n      const username = this.registerForm.get('username')?.value;\n      const password = this.registerForm.get('password')?.value;\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };",
  "map": {
    "version": 3,
    "mappings": ";AAAA,SAAQA,SAAS,QAAe,eAAe;AAC/C,SAAgCC,UAAU,QAAO,gBAAgB;AAQ1D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG1BC,YAAoBC,WAAwB,EAAEC,EAAE;IAA5B,gBAAW,GAAXD,WAAW;IAG/B,qBAAgB,GAAY,KAAK;EAFjC;EAIAE,QAAQ;IACJ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACvC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACtD,UAAU,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACrC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;KAClE,CAAC;EACN;EAEAC,QAAQ;IACJ,IAAI,IAAI,CAACL,YAAY,CAACM,KAAK,EAAE;MACzB,MAAMH,KAAK,GAAG,IAAI,CAACH,YAAY,CAACO,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;MACnD,MAAMC,QAAQ,GAAG,IAAI,CAACT,YAAY,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MACzD,MAAME,QAAQ,GAAG,IAAI,CAACV,YAAY,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;;EAEjE;CACH;AAvBYb,iBAAiB,eAL7BF,SAAS,CAAC;EACPkB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACzC,CAAC,GACWlB,iBAAiB,CAuB7B;SAvBYA,iBAAiB",
    "names": [
      "Component",
      "Validators",
      "RegisterComponent",
      "constructor",
      "formBuilder",
      "lo",
      "ngOnInit",
      "registerForm",
      "group",
      "required",
      "email",
      "minLength",
      "onSubmit",
      "valid",
      "get",
      "value",
      "username",
      "password",
      "selector",
      "templateUrl",
      "styleUrls"
    ],
    "sourceRoot": "",
    "sources": [
      "/Users/davidshimenko/RiderProjects/Twitter Clone/Twitter-Clone/Twitter-Clone/ClientApp/src/app/auth/register/register.component.ts"
    ],
    "sourcesContent": [
      "import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {LoginRegisterModalFlagService} from \"../../login-register-modal-flag.service\";\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm!: FormGroup;\n\n    constructor(private formBuilder: FormBuilder, lo) {\n    }\n\n    showRegisterForm: boolean = false;\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            'email': ['', [Validators.required, Validators.email]],\n            'username': ['', Validators.required],\n            'password': ['', [Validators.required, Validators.minLength(6)]]\n        })\n    }\n\n    onSubmit() {\n        if (this.registerForm.valid) {\n            const email = this.registerForm.get('email')?.value;\n            const username = this.registerForm.get('username')?.value;\n            const password = this.registerForm.get('password')?.value;\n        }\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}