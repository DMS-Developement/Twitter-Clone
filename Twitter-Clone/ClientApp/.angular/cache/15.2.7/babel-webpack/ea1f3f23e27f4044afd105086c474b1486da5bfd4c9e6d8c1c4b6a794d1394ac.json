{
  "ast": null,
  "code": "import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { Validators } from \"@angular/forms\";\nimport { log } from \"util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../login-register-modal-flag.service\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_div_0_div_7_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Username is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_div_0_div_7_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"username\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction LoginComponent_div_0_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_0_div_12_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters long!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_div_0_div_12_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(2, LoginComponent_div_0_div_12_p_2_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.loginForm.get(\"password\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.loginForm.get(\"password\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n  }\n}\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.closeLoginForm());\n    });\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_div_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Username: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵtemplate(7, LoginComponent_div_0_div_7_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 8);\n    i0.ɵɵtext(10, \"Password: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 9);\n    i0.ɵɵtemplate(12, LoginComponent_div_0_div_12_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 10);\n    i0.ɵɵtext(14, \"Login\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵproperty(\"@fadeIn\", undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.errors) && ((tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_2_0.errors) && ((tmp_2_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loginForm.invalid);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, loginFlag) {\n    this.formBuilder = formBuilder;\n    this.loginFlag = loginFlag;\n    this.showLoginForm = false;\n    this.log = log;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      'username': ['', Validators.required],\n      'password': ['', [Validators.required, Validators.minLength(6)]]\n    });\n    this.loginFlag.currentLoginFlag.subscribe(flag => this.showLoginForm = flag);\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const username = this.loginForm.get('username')?.value;\n      const password = this.loginForm.get('password')?.value;\n    }\n  }\n  closeLoginForm() {\n    this.loginFlag.changeLoginFlag(false);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginRegisterModalFlagService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"overlay\", 3, \"click\"], [1, \"register\"], [1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"input-element\"], [\"for\", \"username\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Username\", \"required\", \"\"], [\"class\", \"warning\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"warning\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 15, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.showLoginForm);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  data: {\n    animation: [trigger('fadeIn', [state('void', style({\n      opacity: 0\n    })), transition('void <=> *', animate(100))])]\n  }\n});",
  "map": {
    "version": 3,
    "mappings": "AACA,SAAQA,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,QAAO,qBAAqB;AAC9E,SAAgCC,UAAU,QAAO,gBAAgB;AAEjE,SAAQC,GAAG,QAAO,MAAM;;;;;;;ICGnBC,yBAA2D;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IADrFA,+BAAqG;IACpGA,wEAAoF;IACrFA,iBAAM;;;;;IADDA,eAAqD;IAArDA,iHAAqD;;;;;IAQzDA,yBAA2D;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IACpFA,yBAA4D;IAAAA,4DAA4C;IAAAA,iBAAI;;;;;IAF7GA,+BAAqG;IACpGA,yEAAoF;IACpFA,yEAA4G;IAC7GA,iBAAM;;;;;;IAFDA,eAAqD;IAArDA,iHAAqD;IACrDA,eAAsD;IAAtDA,kHAAsD;;;;;;IAhB/DA,8BAA8E;IAA3BA;MAAAA;MAAA;MAAA,OAASA,sCAAgB;IAAA,EAAC;IAC5EA,8BAAsB;IACsBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IACjEA,8BAA2B;IACJA,0BAAU;IAAAA,iBAAQ;IACxCA,2BAA4F;IAC5FA,qEAEM;IACPA,iBAAM;IAENA,8BAA2B;IACJA,2BAAU;IAAAA,iBAAQ;IACxCA,4BAAgG;IAChGA,uEAGM;IACPA,iBAAM;IAENA,mCAAqD;IAAAA,sBAAK;IAAAA,iBAAS;;;;;;IApB3CA,mCAAO;IAEbA,eAAuB;IAAvBA,4CAAuB;IAIlBA,eAA6E;IAA7EA,wLAA6E;IAQ7EA,eAA6E;IAA7EA,wLAA6E;IAM9EA,eAA8B;IAA9BA,mDAA8B;;;ADDvD,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,SAAwC;IAA1E,gBAAW,GAAXD,WAAW;IAAuB,cAAS,GAATC,SAAS;IAD/D,kBAAa,GAAY,KAAK;IAuBX,QAAG,GAAGL,GAAG;EAtBqE;EAE/FM,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtC,UAAU,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACrC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;KAChE,CAAC;IAEF,IAAI,CAACL,SAAS,CAACM,gBAAgB,CAACC,SAAS,CAACC,IAAI,IAAI,IAAI,CAACC,aAAa,GAAGD,IAAI,CAAC;EAC9E;EAEFE,QAAQ;IACN,IAAI,IAAI,CAACR,SAAS,CAACS,KAAK,EAAE;MACxB,MAAMC,QAAQ,GAAG,IAAI,CAACV,SAAS,CAACW,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MACtD,MAAMC,QAAQ,GAAG,IAAI,CAACb,SAAS,CAACW,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;;EAE1D;EAEAE,cAAc;IACZ,IAAI,CAAChB,SAAS,CAACiB,eAAe,CAAC,KAAK,CAAC;EACvC;;AAzBWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnB3B1B,gEAuBM;;;MAvBAA,wCAAmB;;;;;;eDUX,CACVH,OAAO,CAAC,QAAQ,EAAE,CAChBH,KAAK,CAAC,MAAM,EAAEC,KAAK,CAAC;MAClBgC,OAAO,EAAE;KACV,CAAC,CAAC,EACH/B,UAAU,CAAC,YAAY,EAAEH,OAAO,CAAC,GAAG,CAAC,CAAC,CACvC,CAAC;EACH;AAAA",
    "names": [
      "animate",
      "state",
      "style",
      "transition",
      "trigger",
      "Validators",
      "log",
      "i0",
      "LoginComponent",
      "constructor",
      "formBuilder",
      "loginFlag",
      "ngOnInit",
      "loginForm",
      "group",
      "required",
      "minLength",
      "currentLoginFlag",
      "subscribe",
      "flag",
      "showLoginForm",
      "onSubmit",
      "valid",
      "username",
      "get",
      "value",
      "password",
      "closeLoginForm",
      "changeLoginFlag",
      "selectors",
      "decls",
      "vars",
      "consts",
      "template",
      "opacity"
    ],
    "sourceRoot": "",
    "sources": [
      "/Users/davidshimenko/RiderProjects/Twitter Clone/Twitter-Clone/Twitter-Clone/ClientApp/src/app/auth/login/login.component.ts",
      "/Users/davidshimenko/RiderProjects/Twitter Clone/Twitter-Clone/Twitter-Clone/ClientApp/src/app/auth/login/login.component.html"
    ],
    "sourcesContent": [
      "import {Component, OnInit} from '@angular/core';\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {LoginRegisterModalFlagService} from \"../../login-register-modal-flag.service\";\nimport {log} from \"util\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  animations: [\n    trigger('fadeIn', [\n      state('void', style({\n        opacity: 0\n      })),\n      transition('void <=> *', animate(100)),\n    ])\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm!: FormGroup;\n\n  showLoginForm: boolean = false\n  constructor(private formBuilder: FormBuilder, private loginFlag: LoginRegisterModalFlagService) {}\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        'username': ['', Validators.required],\n        'password': ['', [Validators.required, Validators.minLength(6)]]\n      });\n\n      this.loginFlag.currentLoginFlag.subscribe(flag => this.showLoginForm = flag);\n    }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const username = this.loginForm.get('username')?.value;\n      const password = this.loginForm.get('password')?.value;\n    }\n  }\n\n  closeLoginForm() {\n    this.loginFlag.changeLoginFlag(false);\n  }\n\n  protected readonly log = log;\n}\n",
      "<div *ngIf=\"showLoginForm\" @fadeIn class=\"overlay\" (click)=\"closeLoginForm()\">\n\t<div class=\"register\">\n\t\t<form class=\"form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t<div class=\"input-element\">\n\t\t\t\t<label for=\"username\">Username: </label>\n\t\t\t\t<input id=\"username\" type=\"text\" formControlName=\"username\" placeholder=\"Username\" required>\n\t\t\t\t<div class=\"warning\" *ngIf=\"loginForm.get('username')?.errors && loginForm.get('username')?.touched\">\n\t\t\t\t\t<p *ngIf=\"loginForm.get('username')?.hasError('required')\">Username is required!</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"input-element\">\n\t\t\t\t<label for=\"password\">Password: </label>\n\t\t\t\t<input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required>\n\t\t\t\t<div class=\"warning\" *ngIf=\"loginForm.get('password')?.errors && loginForm.get('password')?.touched\">\n\t\t\t\t\t<p *ngIf=\"loginForm.get('password')?.hasError('required')\">Password is required!</p>\n\t\t\t\t\t<p *ngIf=\"loginForm.get('password')?.hasError('minlength')\">Password must be at least 6 characters long!</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n\t\t</form>\n\t</div>\n</div>"
    ]
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}