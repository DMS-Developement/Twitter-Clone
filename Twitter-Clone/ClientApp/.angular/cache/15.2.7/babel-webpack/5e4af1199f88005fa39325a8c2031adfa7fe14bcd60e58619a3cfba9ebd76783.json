{
  "ast": null,
  "code": "import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction RegisterComponent_div_5_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Email is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_5_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Please enter a valid email!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_5_p_1_Template, 2, 0, \"p\", 4);\n    i0.ɵɵtemplate(2, RegisterComponent_div_5_p_2_Template, 2, 0, \"p\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.registerForm.get(\"email\").hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.registerForm.get(\"email\").hasError(\"email\"));\n  }\n}\nfunction RegisterComponent_div_9_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Username is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_9_p_1_Template, 2, 0, \"p\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.get(\"username\").hasError(\"required\"));\n  }\n}\nfunction RegisterComponent_div_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password must be atleast 6 characters long!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_13_p_1_Template, 2, 0, \"p\", 4);\n    i0.ɵɵtemplate(2, RegisterComponent_div_13_p_2_Template, 2, 0, \"p\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.get(\"password\").hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.get(\"password\").hasError(\"minlength\"));\n  }\n}\nexport class RegisterComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.email]],\n      'username': [null, Validators.required],\n      'password': [null, [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      const email = this.registerForm.get('email').value;\n      const username = this.registerForm.get('username').value;\n      const password = this.registerForm.get('password').value;\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 16,\n  vars: 5,\n  consts: [[1, \"register\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"for\", \"username\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, RegisterComponent_div_9_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵtemplate(13, RegisterComponent_div_13_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵtext(15, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"email\").errors && ctx.registerForm.get(\"email\").touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"username\").errors && ctx.registerForm.get(\"username\").touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"password\").errors && ctx.registerForm.get(\"password\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});",
  "map": {
    "version": 3,
    "mappings": "AACA,SAAgCA,UAAU,QAAO,gBAAgB;;;;;;ICI9DC,yBAA0D;IAAAA,kCAAkB;IAAAA,iBAAI;;;;;IAChFA,yBAAuD;IAAAA,2CAA2B;IAAAA,iBAAI;;;;;IAFvFA,2BAAmF;IAClFA,oEAAgF;IAChFA,oEAAsF;IACvFA,iBAAM;;;;IAFDA,eAAoD;IAApDA,4EAAoD;IACpDA,eAAiD;IAAjDA,yEAAiD;;;;;IAMrDA,yBAA6D;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IADvFA,2BAAyF;IACxFA,oEAAsF;IACvFA,iBAAM;;;;IADDA,eAAuD;IAAvDA,+EAAuD;;;;;IAM3DA,yBAA6D;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IACtFA,yBAA8D;IAAAA,2DAA2C;IAAAA,iBAAI;;;;;IAF9GA,2BAAyF;IACxFA,qEAAsF;IACtFA,qEAA6G;IAC9GA,iBAAM;;;;IAFDA,eAAuD;IAAvDA,+EAAuD;IACvDA,eAAwD;IAAxDA,gFAAwD;;;ADX/D,OAAM,MAAOC,iBAAiB;EAG1BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAC/B;EAEAC,QAAQ;IACJ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACvC,OAAO,EAAE,CAAC,IAAI,EAAE,CAACP,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACxD,UAAU,EAAE,CAAC,IAAI,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACvC,UAAU,EAAE,CAAC,IAAI,EAAE,CAACR,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;KACpE,CAAC;EACN;EAEAC,QAAQ;IACJ,IAAI,IAAI,CAACL,YAAY,CAACM,KAAK,EAAE;MACzB,MAAMH,KAAK,GAAG,IAAI,CAACH,YAAY,CAACO,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK;MAClD,MAAMC,QAAQ,GAAG,IAAI,CAACT,YAAY,CAACO,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;MACxD,MAAME,QAAQ,GAAG,IAAI,CAACV,YAAY,CAACO,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;;EAEhE;;AApBSZ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BpB,8BAAsB;MACYA;QAAA,OAAYqB,cAAU;MAAA,EAAC;MACvDrB,gCAAmB;MAAAA,uBAAO;MAAAA,iBAAQ;MAClCA,2BAAgE;MAChEA,kEAGM;MAENA,gCAAsB;MAAAA,0BAAU;MAAAA,iBAAQ;MACxCA,2BAAqE;MACrEA,kEAEM;MAENA,iCAAsB;MAAAA,2BAAU;MAAAA,iBAAQ;MACxCA,4BAAyE;MACzEA,oEAGM;MAENA,kCAAwD;MAAAA,yBAAQ;MAAAA,iBAAS;;;MArBpEA,eAA0B;MAA1BA,4CAA0B;MAGzBA,eAA2E;MAA3EA,oGAA2E;MAO3EA,eAAiF;MAAjFA,0GAAiF;MAMjFA,eAAiF;MAAjFA,0GAAiF;MAKjEA,eAAiC;MAAjCA,mDAAiC",
    "names": [
      "Validators",
      "i0",
      "RegisterComponent",
      "constructor",
      "formBuilder",
      "ngOnInit",
      "registerForm",
      "group",
      "required",
      "email",
      "minLength",
      "onSubmit",
      "valid",
      "get",
      "value",
      "username",
      "password",
      "selectors",
      "decls",
      "vars",
      "consts",
      "template",
      "ctx"
    ],
    "sourceRoot": "",
    "sources": [
      "/Users/davidshimenko/RiderProjects/Twitter Clone/Twitter-Clone/Twitter-Clone/ClientApp/src/app/auth/register/register.component.ts",
      "/Users/davidshimenko/RiderProjects/Twitter Clone/Twitter-Clone/Twitter-Clone/ClientApp/src/app/auth/register/register.component.html"
    ],
    "sourcesContent": [
      "import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n\n    constructor(private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            'email': [null, [Validators.required, Validators.email]],\n            'username': [null, Validators.required],\n            'password': [null, [Validators.required, Validators.minLength(6)]]\n        })\n    }\n\n    onSubmit() {\n        if (this.registerForm.valid) {\n            const email = this.registerForm.get('email').value;\n            const username = this.registerForm.get('username').value;\n            const password = this.registerForm.get('password').value;\n        }\n    }\n}\n",
      "<div class=\"register\">\n\t<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n\t\t<label for=\"email\">Email: </label>\n\t\t<input id=\"email\" type=\"email\" formControlName=\"email\" required>\n\t\t<div *ngIf=\"registerForm.get('email').errors && registerForm.get('email').touched\">\n\t\t\t<p *ngIf=\"registerForm.get('email').hasError('required')\">Email is required!</p>\n\t\t\t<p *ngIf=\"registerForm.get('email').hasError('email')\">Please enter a valid email!</p>\n\t\t</div>\n\n\t\t<label for=\"username\">Username: </label>\n\t\t<input id=\"username\" type=\"text\" formControlName=\"username\" required>\n\t\t<div *ngIf=\"registerForm.get('username').errors && registerForm.get('username').touched\">\n\t\t\t<p *ngIf=\"registerForm.get('username').hasError('required')\">Username is required!</p>\n\t\t</div>\n\n\t\t<label for=\"password\">Password: </label>\n\t\t<input id=\"password\" type=\"password\" formControlName=\"password\" required>\n\t\t<div *ngIf=\"registerForm.get('password').errors && registerForm.get('password').touched\">\n\t\t\t<p *ngIf=\"registerForm.get('password').hasError('required')\">Password is required!</p>\n\t\t\t<p *ngIf=\"registerForm.get('password').hasError('minlength')\">Password must be atleast 6 characters long!</p>\n\t\t</div>\n\n\t\t<button type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n\t</form>\n</div>"
    ]
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}